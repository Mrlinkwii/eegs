name: macOS CI

on:
  push:
    branches: [ "master" ]

jobs:
  macos-arm64-build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0
    - name: Setup build
      run: |
           brew install sdl2 dylibbundler imagemagick
           ./setup_gl3w.sh
           chmod a+x ./.github/app-bundle.sh
    - name: Build and pack Iris
      run: |
           git fetch --all --tags
           make USE_INTRINSICS=0 -j8
           ./.github/app-bundle.sh
           mkdir -p dist
           cp -R Iris.app dist
    - uses: actions/upload-artifact@v4
      with:
        name: iris-macos-arm64-latest
        path: ./dist

  macos-x86_64-build:
    runs-on: macos-13

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0
    - name: Setup build
      run: |
           brew install sdl2 dylibbundler imagemagick
           ./setup_gl3w.sh
           chmod a+x ./.github/app-bundle.sh
    - name: Build and pack Iris
      run: |
           git fetch --all --tags
           make USE_INTRINSICS=0 -j8
           ./.github/app-bundle.sh
           mkdir -p dist
           cp -R Iris.app dist
    - uses: actions/upload-artifact@v4
      with:
        name: iris-macos-x86_64-latest
        path: ./Iris.app

  macos-universal-build:
    name: macos-universal
    needs: [macos-x86_64-build,macos-arm64-build]
    runs-on: macos-latest

    steps:
      - name: Download x86_64
        uses: actions/download-artifact@v4
        with:
          name: iris-macos-x86_64-latest
          path: x86_64
      - name: Download ARM64
        uses: actions/download-artifact@v4
        with:
          name: iris-macos-arm64-latest
          path: arm64
      - name: Setup dylibbundler and imagemagick
        run: |
          brew install dylibbundler imagemagick
      - name: Combine app bundles
        shell: bash
        run: |
          set -x
          list x86_64
          list arm64
          list x86_64/Iris.app
          list x86_64/Iris.app/Contents
          list x86_64/Iris.app/Contents/MacOS
          lipo {x86_64,arm64}/Iris.app/Contents/MacOS/iris -create -output iris
          cp -v -a arm64/Iris.app Iris.app
          cp -v iris Iris.app/Contents/MacOS/iris
          # Mix in x86_64 files that do not appear in the ARM64 build (e.g. libvulkan)
          cp -v -R -n x86_64/Iris.app/* Iris.app/ || true
          codesign --force -s - -vvvv Iris.app
          mkdir dist -p
          mv Iris.app dist
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: iris-macos-universal-latest
          path: dist/
