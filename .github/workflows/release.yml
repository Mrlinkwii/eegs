name: Release CI

on:
  push:
    tags:
    - '0.*'

jobs:
  windows-build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0
    - name: Build and pack Iris
      run: |
        git fetch --all --tags
        cmake -S . -B build -G "MinGW Makefiles"
        cmake --build build -j8
        New-Item -Path "dist" -ItemType Directory
        Copy-Item -Path ".\build\iris.exe" "dist"
        Copy-Item ".\build\*.dll" "dist"
        Copy-Item "C:\mingw64\bin\*.dll" "dist"
    - name: Generate artifact name
      id: generate-name
      run: |
        echo "::set-output name=artifact::iris-${{ github.ref_name }}-win"
    - name: Zip artifact
      run: |
        $artifactName = "${{ steps.generate-name.outputs.artifact }}"
        Compress-Archive -Path "dist\*" -DestinationPath "$artifactName.zip"
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.generate-name.outputs.artifact }}.zip

  ubuntu-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0
    - name: Install deps
      run: |
        sudo add-apt-repository universe
        sudo apt-get install build-essential git make \
        pkg-config cmake ninja-build gnome-desktop-testing libasound2-dev libpulse-dev \
        libaudio-dev libjack-dev libsndio-dev libx11-dev libxext-dev \
        libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev libxss-dev libxtst-dev \
        libxkbcommon-dev libdrm-dev libgbm-dev libgl1-mesa-dev libgles2-mesa-dev \
        libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev libfuse2t64
    - name: Build and pack Iris
      run: |
        git fetch --all --tags
        cmake -S . -B build
        cmake --build build -j8
        sudo cmake --install build
        mkdir dist
        mv ./build/iris ./dist
        mkdir appimage
        mv ./build/*.AppImage ./appimage
    - name: Generate artifact name
      id: generate-name
      run: |
        echo "::set-output name=artifact::iris-${{ github.ref_name }}-ubuntu"
    - name: Generate AppImage artifact name
      id: generate-name-appimage
      run: |
        echo "::set-output name=artifact::iris-${{ github.ref_name }}-ubuntu-appimage"
    - name: Zip artifact
      run: |
        zip -rj ${{ steps.generate-name.outputs.artifact }}.zip appimage
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.generate-name.outputs.artifact }}.zip
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.generate-name-appimage.outputs.artifact }}.zip

  macos-universal-build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0
    - name: Build and pack Iris
      run: |
        git fetch --all --tags
        cmake -S . -B build
        cmake --build build -j8
        sudo cmake --install build
        mkdir -p ./build/dist
        cp -R ./build/iris.app ./build/dist
    - name: Generate artifact name
      id: generate-name
      run: |
        echo "::set-output name=artifact::iris-${{ github.ref_name }}-macos-universal"
    - name: Zip artifact
      run: |
        zip -r ${{ steps.generate-name.outputs.artifact }}.zip ./build/dist
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.generate-name.outputs.artifact }}.zip
